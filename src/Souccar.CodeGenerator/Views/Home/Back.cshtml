@model Souccar.CodeGenerator.Models.BackendModel

@{
    ViewData["Title"] = "Back";
}


<div class="row">
    <div class="form-group col-lg-4">
        <label asp-for="ModuleName">Module</label>
        <select id="moduleName" class="form-control" asp-for="ModuleName">
            <option></option>
            @foreach (var moduleName in ModuleHelper.ModulesNames)
            {
                <option value="@moduleName">@moduleName</option>
            }
        </select>
        <span asp-validation-for="ModuleName" class="text-danger"></span>
    </div>

    <div class="form-group  col-lg-4">
        <label asp-for="Entity">Entity</label>
        <select id="entity" class="form-control" asp-for="Entity">
        </select>
        <span asp-validation-for="Entity" class="text-danger"></span>
    </div>
    @*<div class="form-group  col-lg-4">
    <label asp-for="Page">Page</label>
    <select id="page" class="form-control" asp-for="Page">
    <option value=""></option>
    <option value="Read">ReadDto</option>
    <option value="Read">CreateDto</option>
    <option value="Read">EditDto</option>
    <option value="Read">ViewDto</option>
    <option value="Read">FilterDto</option>
    </select>
    <span asp-validation-for="Entity" class="text-danger"></span>
    </div>*@
</div>
<div id="entityDetail" class="row mt-2">
    <div class="col-lg-12">
        <div id="fields">
            <div class="container">
                <div class="card">
                    <div class="card-header">
                        <ul class="nav nav-tabs card-header-tabs" id="tabs">
                            <li class="nav-item">
                                <a class="active nav-link active" href="#readDto" data-toggle="tab">Read Dto</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" href="#createDto" data-toggle="tab">Create Dto</a>
                            </li>
                        </ul>
                    </div>
                    <div class="card-body">
                        <div class="tab-content">
                            <div class="tab-pane active" id="readDto">
                                <table id="tblReadDto" class="table table-striped">
                                </table>
                            </div>
                            <div class="tab-pane" id="ts">Create</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script>
        $(function () {
            $('#entityDetail').hide();
            $("#moduleName").change(function () {
                $.getJSON("@Url.Action("GetModuleEntities","Home")", { moduleName: $("#moduleName").val() }, function (data) {
                    if (data.success) {
                        var items = '<option></option>';
                        $("#entity").empty();
                        $.each(data.entities, function (index, entity) {
                            items += "<option value='" + entity.fullName + "'>" + entity.name + "</option>";
                        });
                        $('#entity').html(items);
                    }
                });
            });
            //------
            $("#entity").change(function () {
                $('#entityDetail').show();
                var entity = $("#entity").val();

                var url = '@Url.Action("GetFields","Home")' + '?fullName=' + $("#entity").val() + "&page=Read";
                $.getJSON(url, { moduleName: $("#moduleName").val() }, function (data) {
                    if (data.success) {
                        generateReadTable(data.fields);
                    }
                });
            });

            $('.nav-tabs a').on('click', function (event) {
                $(this).tab('show');
            });

            function generateReadTable(fields) {
                $('#tblReadDto').append(generateReadThead());
                $('#tblReadDto').append(generateReadTbody(fields));
            }

            function generateReadThead() {
                var html = '<thead>';
                html += '<tr>';
                html += '<th style="width:20px;"><th>';
                html += '<th>Name<th>';
                html += '<th>Sortable<th>';
                html += '<th>Filterable<th>';
                html += '<th>Searchable<th>';
                html += '</tr>';
                html += '</thead>';
                return html;
            }
            function generateReadTbody(fields) {
                debugger;
                var html = '<tbody>';
                for (var i = 0; i < fields.length; i++) {
                    html += '<tr>';
                    var fieldId = 'field-' + i;
                    html += '<td>' + checkboxTag(true, fieldId) + '<td>';
                    html += '<td>' + fields[i].name + '<td>';
                    html += '<td>' + fields[i].sortable + '<td>';
                    html += '<td>' + fields[i].filterable + '<td>';
                    html += '<td>' + fields[i].searchable + '<td>';
                    html += '</tr>';
                }
                html += '</tbody>';
                return html;
            }

            function checkboxTag(value, id, name) {
                debugger;
                if (!name) {
                    name = id;
                }
                var checked = value == true ? 'checked' : '';
                return '<input type="checkbox" id="' + id + '" name ="' + name + '" ' + checked + ' class="form-check-input" />';
            }
        });

    </script>
}